# Generated by Django 5.1.1 on 2025-09-01 18:35

import django.contrib.postgres.fields
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AuthAccount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(max_length=50, unique=True)),
                ('email', models.CharField(max_length=100, unique=True)),
                ('password', models.CharField(max_length=255)),
                ('first_name', models.CharField(blank=True, max_length=50, null=True)),
                ('is_admin', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('is_superuser', models.BooleanField(default=False)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('date_joined', models.DateTimeField(auto_now_add=True)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'auth_accounts',
            },
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(blank=True, max_length=50, null=True)),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('goal', models.CharField(blank=True, choices=[('masa', 'Masa mięśniowa'), ('redukcja', 'Redukcja tkanki tłuszczowej'), ('siła', 'Zwiększenie siły'), ('wytrzymalosc', 'Wytrzymałość'), ('zdrowie', 'Zdrowie ogólne')], max_length=50, null=True)),
                ('level', models.CharField(blank=True, choices=[('początkujący', 'Początkujący'), ('średniozaawansowany', 'Średniozaawansowany'), ('zaawansowany', 'Zaawansowany')], max_length=50, null=True)),
                ('training_days_per_week', models.IntegerField(blank=True, null=True)),
                ('equipment_preference', models.CharField(blank=True, choices=[('siłownia', 'Pełna siłownia'), ('dom_hantle', 'Dom (hantle + ławka)'), ('dom_masa', 'Dom (masa własna ciała)'), ('minimalne', 'Minimalne wyposażenie'), ('dom', 'Trening w domu'), ('wolne_ciezary', 'Wolne ciężary')], max_length=50, null=True)),
                ('preferred_session_duration', models.IntegerField(blank=True, default=60, null=True)),
                ('avoid_exercises', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=100), blank=True, help_text='Lista problemowych ćwiczeń/kategorii do unikania', null=True, size=20)),
                ('focus_areas', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=100), blank=True, help_text='Lista obszarów skupienia treningu', null=True, size=10)),
                ('last_survey_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('recommendation_method', models.CharField(blank=True, choices=[('product', 'Produkt (content-based)'), ('user', 'Klient (collaborative)'), ('hybrid', 'Hybrydowo')], default='hybrid', max_length=10, null=True)),
                ('auth_account', models.OneToOneField(db_column='auth_account_id', on_delete=django.db.models.deletion.CASCADE, related_name='userprofile', to='accounts.authaccount')),
            ],
            options={
                'db_table': 'user_profiles',
            },
        ),
    ]
