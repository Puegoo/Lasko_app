version: '3.9'

services:
  # Frontend w trybie dev (hot reload)
  frontend:
    build:
      context: ./frontend/lasko-frontend
      dockerfile: Dockerfile.dev
    ports:
      - "3000:3000"
    volumes:
      - ./frontend/lasko-frontend:/app:delegated
      - frontend_node_modules:/app/node_modules
    environment:
      - VITE_API_BASE_URL=http://localhost:8000
      - CHOKIDAR_USEPOLLING=true
      - CHOKIDAR_INTERVAL=1000
      - WATCHPACK_POLLING=true
      - WDS_SOCKET_HOST=localhost
      - WDS_SOCKET_PORT=3000
      - NODE_ENV=development
    depends_on:
      - backend
    networks:
      - lasko-network
    stdin_open: true
    tty: true
    restart: unless-stopped

  # Backend Django w trybie dev
  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app:delegated
      - backend_logs:/app/logs
    environment:
      - DEBUG=1
      - DJANGO_SETTINGS_MODULE=lasko_backend.settings
      - POSTGRES_DB=LaskoDB
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - DB_HOST=db
      - DB_PORT=5432
      - PYTHONUNBUFFERED=1
    depends_on:
      - db
      - redis
    networks:
      - lasko-network
    command: python manage.py runserver 0.0.0.0:8000
    restart: unless-stopped

  # Baza danych PostgreSQL
  db:
    image: postgres:13-alpine
    volumes:
      - postgres_data_dev:/var/lib/postgresql/data/
    environment:
      POSTGRES_DB: LaskoDB
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_INITDB_ARGS: "--encoding=UTF8 --locale=C"
    ports:
      - "5432:5432"
    networks:
      - lasko-network
    restart: unless-stopped

  # Redis
  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    networks:
      - lasko-network
    restart: unless-stopped

volumes:
  postgres_data_dev:
  backend_logs:
  frontend_node_modules:

networks:
  lasko-network:
    driver: bridge