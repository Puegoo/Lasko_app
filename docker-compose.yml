services:
  db:
    image: postgres:15
    environment:
      POSTGRES_DB: LaskoDB
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
      # inicjalizacja struktury przy *pierwszym* starcie wolumenu
      - ./SQL/01_schema.sql:/docker-entrypoint-initdb.d/01_schema.sql:ro
      # opcjonalny pełny backup: jeśli plik istnieje, zostanie zaimportowany przy *pierwszym* starcie wolumenu
      - ./seed/lasko_seed.sql:/docker-entrypoint-initdb.d/02_seed.sql:ro
      # dostęp do katalogu seed wewnątrz kontenera (np. do ręcznych dumpów/restore)
      - ./seed:/seed
    ports:
      - "5433:5432"   # host:container
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d LaskoDB"]
      interval: 5s
      timeout: 5s
      retries: 30
      start_period: 10s
    networks:
      - lasko-network

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    environment:
      DEBUG: "1"
      DJANGO_SETTINGS_MODULE: lasko_backend.settings
      POSTGRES_DB: LaskoDB
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      DB_HOST: db
      DB_PORT: "5432"
      PYTHONUNBUFFERED: "1"
    volumes:
      - ./backend:/app
      - ./SQL:/app/SQL     # skrypty seedujące dostępne w kontenerze
      - ./seed:/app/seed   # backupy dostępne z backendu (opcjonalnie)
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
    command: >
      sh -c "
        echo 'Waiting for database...' &&
        python manage.py check_db_ready &&
        echo 'Applying migrations...' &&
        python manage.py migrate --noinput --fake-initial &&
        echo 'Starting server...' &&
        python manage.py runserver 0.0.0.0:8000
      "
    healthcheck:
      test: ["CMD-SHELL", "nc -z 127.0.0.1 8000 || exit 1"]
      interval: 5s
      timeout: 3s
      retries: 60
      start_period: 30s
    networks:
      - lasko-network
    restart: unless-stopped

  frontend:
    build:
      context: ./frontend/lasko-frontend
    environment:
      # UWAGA: to jest używane przez kod w PRZEGLĄDARCE – musi być hostowy URL
      VITE_API_BASE_URL: http://localhost:8000
      NODE_ENV: development
    volumes:
      - ./frontend/lasko-frontend:/app
      - /app/node_modules
    ports:
      - "3000:3000"
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - lasko-network
    restart: unless-stopped

volumes:
  postgres_data:

networks:
  lasko-network:
    driver: bridge